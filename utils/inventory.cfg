#textdomain wesnoth-Bad_Moon_Rising

# eventually, this should not be hard-coded for side 1

#define BMR_POOL_DUMMY
    ################################################################
    # this is to suppress the warning spam from lua/Status_Test.lua, if there is no inventory
    ################################################################
    [if]
        [variable]
            name=gear_pool.length
            not_equals=1
        [/variable]
        [then]
            [set_variable]
                name=gear_pool.dummy
                value=0
            [/set_variable]
        [/then]
    [/if]
    ################################################################
#enddef

# a little status icon to say that a unit has equipment (of any sort)
#define BMR_INIT_LUA_ICON
    [event]
        name=preload
        first_time_only=no
        [lua]
            code=<<
            local _ = wesnoth.textdomain "wesnoth-Bad_Moon_Rising"
            local old_unit_status = wesnoth.theme_items.unit_status
            function wesnoth.theme_items.unit_status()
                local u = wesnoth.get_displayed_unit()
                if not u then return {} end
                local s = old_unit_status()
		if u.variables.gear then		    
                    table.insert(s, { "element", {
                        image = "misc/pack.png",
                        tooltip = _"This unit has equipment."
                    } })
                end
                return s
            end
        >>
        [/lua]
        [set_variable]
            name=bmr_gear_lua_tooltip
            value=fired
        [/set_variable]
    [/event]
#enddef


#define BMR_INIT_LUA_PRESTART

    [lua]
        code = <<
        wesnoth.dofile("~add-ons/Bad_Moon_Rising/lua/main.lua")
>>
    [/lua]

    [event]
        name=prestart
        {BMR_POOL_DUMMY}
        [if]
            [have_unit]
                # only side 1 is on worldmap, so side=1 is OK here, but not for status menu
                side=1
                [filter_side]
                    controller=human
                [/filter_side]
            [/have_unit]
            [then]
                [store_unit]
                    [filter]
                        side=1
                        [not]
                            [filter_wml]
                                [variables]
                                    on_call=yes
                                [/variables]
                            [/filter_wml]
                        [/not]
                    [/filter]
                    variable=init_on_call
                    kill=no
                [/store_unit]
                {FOREACH init_on_call iioc}
                    [set_variable]
                        name=init_on_call[$iioc].variables.on_call
                        value=no
                    [/set_variable]
                    [unstore_unit]
                        variable=init_on_call[$iioc]
                        find_vacant=no
                    [/unstore_unit]
                {NEXT iioc}
                {CLEAR_VARIABLE init_on_call}
            [/then]
        [/if]
        [set_menu_item]
            description = _ "Unit Status"
            id = "inventory_item"
            [show_if]
                [have_unit]
                    x,y=$x1,$y1
                    side=$side_number
                [/have_unit]
            [/show_if]
            [command]
                [lua]
                    code= <<
                                local test_dialog2 = Status_test.new()
                        >>
                [/lua]
            [/command]
        [/set_menu_item]
        [if]
            [variable]
                name=total_on_call
                greater_than=0
            [/variable]
            [else]
                [set_variable]
                    name=total_on_call
                    value=0
                [/set_variable]
            [/else]
        [/if]
    [/event]

#enddef

#define BMR_INIT_WML_MOVETO

    [event]
        name=moveto
        first_time_only=no
        [filter]
            #           side=1
            [filter_side]
                controller=human
            [/filter_side]
            [filter_location]
                find_in=gear_map_items
            [/filter_location]
        [/filter]
        {FOREACH gear_map_items mi}
            [if]
                [variable]
                    name=gear_map_items[$mi].x
                    equals=$x1
                [/variable]
                [variable]
                    name=gear_map_items[$mi].y
                    equals=$y1
                [/variable]
                [then]
                    [apply_gear]
                        id = $unit.id
                        gear_id = $gear_map_items[$mi].id
                    [/apply_gear]
                    # might need to re-think this
                    [set_variable]
                        name=mi
                        value=$gear_map_items.length
                    [/set_variable]
                    [floating_text]
                        x,y=$x1,$y1
                        text="<span color='#99aaaa'>" + _ "Takes item..." + "</span>"
                    [/floating_text]
                [/then]
            [/if]
        {NEXT mi}
    [/event]
    # otherwise, these things carry over between maps, and you get random, invisible items being picked up.
    [event]
        name=victory
        {CLEAR_VARIABLE gear_map_items}
    [/event]

#enddef

# didn't end up using this
#ifdef __UNUSED__
# define BMR_INIT_WML_SHOP_MOVETO

[event]
    name=moveto
    first_time_only=no
    [filter]
        side=1
        [filter_location]
            find_in=gear_map_items
        [/filter_location]
    [/filter]
    {FOREACH gear_map_items mi}
        [if]
            [variable]
                name=gear_map_items[$mi].x
                equals=$x1
            [/variable]
            [variable]
                name=gear_map_items[$mi].y
                equals=$y1
            [/variable]
            [then]
                [apply_gear]
                    id = $unit.id
                    gear_id = $gear_map_items[$mi].id
                [/apply_gear]
                # might need to re-think this
                [set_variable]
                    name=mi
                    value=$gear_map_items.length
                [/set_variable]
                [gold]
                    side=1
                    amount = -$gear_map_items[$mi].cost
                [/gold]
                [floating_text]
                    x,y=$x1,$y1
                    text="<span color='#aa7777'>" + _ "Buys item...-$gear_map_items[$mi].cost| g" + "</span>"
                [/floating_text]
            [/then]
        [/if]
    {NEXT mi}
[/event]

# enddef
#endif

#define BMR_INIT_WML_DIE

    [event]
        name = die
        first_time_only = no
        [filter]
            [filter_wml]
                [variables]
                    [gear]
                    [/gear]
                [/variables]
            [/filter_wml]
        [/filter]
        {FOREACH unit.variables.gear gi}
            [gear_item]
                x,y=$x1,$y1
                gear_id = $unit.variables.gear[$gi].id
            [/gear_item]
        {NEXT gi}
    [/event]

#enddef

#define BMR_INIT_WML_POOL_SWAP
    # problem with this plan is that anything added to invnetory during start, prestart, etc. will disappear

    [event]
        name=side turn end
        first_time_only=no
        [filter_condition]
            [have_unit]
                side=$side_number
                [filter_side]
                    controller=human
                [/filter_side]
            [/have_unit]
            [variable]
                name=gear_pool.length
                equals=1
            [/variable]
        [/filter_condition]
        [set_variables]
            name=gear_pool_$side_number|
            mode=replace
            to_variable=gear_pool
        [/set_variables]
        {CLEAR_VARIABLE gear_pool}
    [/event]

    [event]
        name=side turn
        first_time_only=no
        [filter_condition]
            [have_unit]
                side=$side_number
                [filter_side]
                    controller=human
                [/filter_side]
            [/have_unit]
            [variable]
                name=gear_pool_$side_number|.length
                equals=1
            [/variable]
        [/filter_condition]
        [set_variables]
            name=gear_pool
            mode=replace
            to_variable=gear_pool_$side_number|
        [/set_variables]
        {CLEAR_VARIABLE gear_pool_$side_number|}
    [/event]

    [event]
        name=side turn
        first_time_only=no
        {BMR_POOL_DUMMY}
    [/event]

    [event]
        name=victory
        # WTF was this for?
        #    [set_variable]
        #	name=side_number_
        #	value=1
        #    [/set_variable]
        [filter_condition]
            [have_unit]
                side=$side_number # does this variable exist now?
                [filter_side]
                    controller=human
                [/filter_side]
            [/have_unit]
            [variable]
                name=gear_pool.length
                equals=1
            [/variable]
            # so the inventory doesn't get wiped out by cut-scenes
            [variable]
                name=turn_number
                greater_than=1
            [/variable]
        [/filter_condition]
        [set_variables]
            name=gear_pool_$side_number|
            mode=replace
            to_variable=gear_pool
        [/set_variables]
        {CLEAR_VARIABLE gear_pool}
    [/event]

#enddef

#define BMR_INIT_LUA

    {BMR_INIT_LUA_ICON}
    {BMR_INIT_LUA_PRESTART}
    {BMR_INIT_WML_POOL_SWAP}
    {BMR_INIT_WML_MOVETO}
    {BMR_INIT_WML_DIE}

#enddef
